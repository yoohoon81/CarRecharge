package ScheduleSystem;

import java.util.Date;
import java.util.concurrent.ThreadLocalRandom;

import jade.core.Agent;
import jade.core.behaviours.CyclicBehaviour;

public class CarAgent extends Agent implements CarAgentInterface {
	//input
	//public int MaxLoad;
	//public int CurrentLoad;
	//input
	//public Date EarliestStartTime;
	//input
	//public Date LatestChargedTime;
	
	public int Id;
	private int RequiredLoad;	
	private int LoadToRecharge;	
	private int Deadline;	
	private int elapsedSeconds;
	public CarAgent() {
		registerO2AInterface(CarAgentInterface.class, this);	
		elapsedSeconds = 0;
	}
	
	protected void setup() {
		
		Object[] args = getArguments();
		System.out.println("Starting up a CarAgent" + args[0]);
		Id = Integer.parseInt(args[0].toString());
		RequiredLoad = Integer.parseInt(args[1].toString());
		LoadToRecharge = Integer.parseInt(args[1].toString());
		Deadline = Integer.parseInt(args[1].toString());
	}


	@Override
	public int getRequiredLoad() {
		return LoadToRecharge;
	}

	@Override
	public int getId() {
		return Id;
	}

	@Override
	public void recharge() {
		LoadToRecharge -= 1;
		
	}

	@Override
	public int ElapseSecond() {
		return elapsedSeconds++;
	}

	@Override
	public int getChargedPercent() {
		if(RequiredLoad <= 0)
			return 100;
		
		return (RequiredLoad - LoadToRecharge) * 100 / RequiredLoad;
	}	

	@Override
	public void reset()
	{
		LoadToRecharge = RequiredLoad;
		elapsedSeconds = 0;
	}
	
}
